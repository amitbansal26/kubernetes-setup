---
- name: "Install yum utils"
  ansible.builtin.yum:
    name: yum-utils
    state: present
  become: true
    

- name: "Add Kubernetes Repository"
  ansible.builtin.yum_repository:
    name: Kubernetes
    description: Repository for kubernetes java_packages
    baseurl:
      - "https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/rpm/"
    enabled: yes
    gpgcheck: yes
    gpgkey: "https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/rpm/repodata/repomd.xml.key"
  #  exclude: kubelet kubeadm kubectl cri-tools kubernetes-cni
  become: true

- name: "Add Docker Repository"
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docer-ce.repo
  become: true
#kubelet kubectl kubeadm kubernetes-cni cri-tools
- name: "Download kubernetes packages"
  yum:
    name:
      - kubelet
      - kubectl
      - kubeadm
      - kubernetes-cni
      - cri-tools
      - containerd.io
      - container-selinux
      - curl
      - procps-ng
    download_only: true
    download_dir: "/home/amit/packages"
  become: true


- name: "Download lb packages"
  yum:
    name:
      - haproxy
      - keepalived
      - curl
      - procps-ng
    download_only: true
    download_dir: "/home/amit/lb"
  become: true

- name: "Find Containerd RPM " 
  find:
    paths:
      - "/home/amit/packages"
    patterns: 
      - "containerd*.rpm"
      - "cri-tools*.rpm"
  register: rpm_files

- name: "Create List in case of multiple packaages"
  set_fact:
    package_list: "{{rpm_files.files | map(attribute='path') | list}}"

- name: Install containerd rpm from a local file
  ansible.builtin.yum:
    name: "{{package_list}}"
    state: present
  become: true

- name: Start containerd
  ansible.builtin.systemd_service:
    state: started
    name: containerd
  become: true

- name: "Set Kubernetes api version"
  set_fact:
    api_server_version: "{{ kubernetes_version_kubeadm }}"

- name: "Set Kubernetes controller version"
  set_fact:
    controller_version: "{{ kubernetes_version_kubeadm }}" 

- name: "Set Kubernetes scheduler version"
  set_fact:
    scheduler_version: "{{ kubernetes_version_kubeadm }}"

- name: "Set Kubernetes proxy version"
  set_fact:
    proxy_version: "{{ kubernetes_version_kubeadm }}"

- name: "Set Kubernetes pause image version"
  set_fact:
    pause_version: "{{ pause_version }}"

- name: "Set Kubernetes Etcd version"
  set_fact:
    etcd_version: "{{ etcd_version }}"

- name: "Set Kubernetes Coredns version"
  set_fact:
    coredns_version: "{{ coredns_version }}"

- name: "Set Kubernetes Calico version"
  set_fact:
    calico_version: "{{ calico_version }}"

- name: "Set fact for docker image list"
  set_fact:
    full_images_list:
      - 'registry.k8s.io/kube-apiserver:{{ api_server_version }}'
      - 'registry.k8s.io/kube-controller-manager:{{ controller_version }}'
      - 'registry.k8s.io/kube-scheduler:{{ scheduler_version }}'
      - 'registry.k8s.io/kube-proxy:{{ proxy_version }}'
      - 'registry.k8s.io/pause:{{ pause_version }}'                  
      - 'registry.k8s.io/etcd:{{ etcd_version }}'
      - 'registry.k8s.io/coredns/coredns:{{ coredns_version }}'
      - 'quay.io/calico/cni:{{ calico_version }}'
      - 'quay.io/calico/pod2daemon-flexvol:{{ calico_version }}'
      - 'quay.io/calico/node:{{ calico_version }}'
      - 'quay.io/calico/node-driver-registrar:{{ calico_version }}'
      - 'quay.io/calico/typha:{{ calico_version }}'
      - 'quay.io/calico/csi:{{ calico_version }}'
      - 'quay.io/calico/kube-controllers:{{ calico_version }}'

- name: "Download all the images"
  command:
    ctr image pull "{{ item }}"
  loop: "{{ full_images_list }}"
  become: true

- name: Creates directory for image tars
  ansible.builtin.file:
    path: "{{ image_path }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  become: true

- name: Tar all the images
  command:
    ctr image export "{{ image_path }}"/"{{ item.name }}" "{{ item.fimage }}:{{ item.tag }}"
  become: true
  with_items:
    - { name: kube-apiserver.tar, fimage: registry.k8s.io/kube-apiserver, tag: '{{ api_server_version }}' }
    - { name: kube-controller-manager.tar, fimage: registry.k8s.io/kube-controller-manager, tag: '{{ controller_version }}' }
    - { name: kube-scheduler.tar, fimage: registry.k8s.io/kube-scheduler, tag: '{{ scheduler_version }}' }
    - { name: kube-proxy.tar, fimage: registry.k8s.io/kube-proxy, tag: '{{ proxy_version }}' }
    - { name: pause.tar, fimage: registry.k8s.io/pause, tag: '{{ pause_version }}' }
    - { name: etcd.tar, fimage: registry.k8s.io/etcd, tag: '{{ etcd_version }}' }
    - { name: coredns.tar, fimage: registry.k8s.io/coredns/coredns, tag: '{{ coredns_version }}' }
    - { name: calico-cni.tar, fimage: quay.io/calico/cni, tag: '{{ calico_version }}' }
    - { name: calico-pod2daemon-flexvol.tar, fimage: quay.io/calico/pod2daemon-flexvol, tag: '{{ calico_version }}' }
    - { name: calico-kube-controllers.tar, fimage: quay.io/calico/kube-controllers, tag: '{{ calico_version }}' }
    - { name: calico-node.tar, fimage: quay.io/calico/node, tag: '{{ calico_version }}' }
    - { name: calico-csi.tar, fimage: quay.io/calico/csi, tag: '{{ calico_version }}' }
    - { name: calico-node-driver-registrar.tar, fimage: quay.io/calico/node-driver-registrar, tag: '{{ calico_version }}' }
    - { name: calico-typha.tar, fimage: quay.io/calico/typha, tag: '{{ calico_version }}' }

- name: Compress all image tars
  archive:
    path: "{{ image_path }}"
    dest: "{{ image_path }}/allimages.tgz"
  become: true

- name: Compress all kubernetes packages rpm
  archive:
    path: "/home/amit/packages"
    dest: "/home/amit/packages/allpackages.tgz"
  become: true

- name: Compress all lb packages rpm
  archive:
    path: "/home/amit/lb"
    dest: "/home/amit/lb/alllb.tgz"
  become: true